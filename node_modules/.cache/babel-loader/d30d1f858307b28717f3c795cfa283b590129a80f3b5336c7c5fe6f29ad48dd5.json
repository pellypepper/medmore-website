{"ast":null,"code":"import'./App.css';import React,{useState}from\"react\";import Home from'./pages/home/home';import'bootstrap/dist/css/bootstrap.min.css';import{loadStripe}from'@stripe/stripe-js';import{BrowserRouter as Router,Route,Routes}from\"react-router-dom\";import Payment from\"./pages/payment/payment\";import Detail from'./pages/details/detail';import Card from'./pages/card/card';import ProductDisplay from'./pages/productdisplay/display';import{Elements}from'@stripe/react-stripe-js';import Checkout from\"./pages/checkout/checkout\";import AdminDashboard from'./pages/adminDashboard/admin';import OrderConfirmation from'./pages/order/order';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const stripePromise=loadStripe('pk_test_51QRXGxBlRPuLLUxXKbMlflbrE4ghJsLt9PkDkh47BNvc9sKbSsF7Fi48bZVeC29Za5LKKIaHe9g935Jeh2Mj1vc600gVvRCsQw');// Use your actual publishable key\nfunction App(){const[cart,setCart]=useState(()=>{const savedCart=sessionStorage.getItem(\"cart\");return savedCart?JSON.parse(savedCart):[];});const updateSessionStorageCart=cart=>{sessionStorage.setItem(\"cart\",JSON.stringify(cart));};const removeFromCart=async product=>{console.log(\"Removing item from cart:\",product);// Optimistically update the cart state in the UI\nconst updatedCart=cart.filter(item=>item.id!==product.productId);setCart(updatedCart);updateSessionStorageCart(updatedCart);console.log(product.productId);// Remove the cart from session storage if empty\nif(updatedCart.length===0){sessionStorage.removeItem(\"cart\");}try{const response=await fetch(`${process.env.REACT_APP_API_URL}/cart`,{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({userId:sessionStorage.getItem(\"user_id\"),productId:product.productId})});// Check if the response was successful\nif(!response.ok){const errorMessage=await response.text();throw new Error(errorMessage||\"Failed to remove item from cart\");}// Update the cart with the server response\nconst serverCart=await response.json();// Ensure you use the server response to reflect the correct cart state\nsetCart(serverCart);updateSessionStorageCart(serverCart);console.log(\"Updated cart state:\",updatedCart);}catch(error){console.error(\"Error removing item from server:\",error);// Revert the optimistic update if the server fails\nsetCart(cart);// Restore the cart to its previous state\n}};return/*#__PURE__*/_jsx(Elements,{stripe:stripePromise,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{removeFromCart:removeFromCart})}),/*#__PURE__*/_jsx(Route,{path:\"/checkout\",element:/*#__PURE__*/_jsx(Checkout,{removeFromCart:removeFromCart})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(AdminDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/payment\",element:/*#__PURE__*/_jsx(Payment,{})}),/*#__PURE__*/_jsx(Route,{path:\"/card\",element:/*#__PURE__*/_jsx(Card,{})}),/*#__PURE__*/_jsx(Route,{path:\"/detail\",element:/*#__PURE__*/_jsx(Detail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/display\",element:/*#__PURE__*/_jsx(ProductDisplay,{})}),/*#__PURE__*/_jsx(Route,{path:\"/order\",element:/*#__PURE__*/_jsx(OrderConfirmation,{})})]})})});}export default App;","map":{"version":3,"names":["React","useState","Home","loadStripe","BrowserRouter","Router","Route","Routes","Payment","Detail","Card","ProductDisplay","Elements","Checkout","AdminDashboard","OrderConfirmation","jsx","_jsx","jsxs","_jsxs","stripePromise","App","cart","setCart","savedCart","sessionStorage","getItem","JSON","parse","updateSessionStorageCart","setItem","stringify","removeFromCart","product","console","log","updatedCart","filter","item","id","productId","length","removeItem","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","userId","ok","errorMessage","text","Error","serverCart","json","error","stripe","children","path","element"],"sources":["/Users/touchbar/Documents/GitHub/medmore-website/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport React, { useState} from \"react\";\nimport Home from  './pages/home/home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Payment from \"./pages/payment/payment\";\nimport Detail from './pages/details/detail';\nimport Card from './pages/card/card';\nimport ProductDisplay from './pages/productdisplay/display';\nimport { Elements } from '@stripe/react-stripe-js'; \nimport Checkout from \"./pages/checkout/checkout\";\nimport AdminDashboard from './pages/adminDashboard/admin';\nimport OrderConfirmation from './pages/order/order';\n\n\nconst stripePromise = loadStripe('pk_test_51QRXGxBlRPuLLUxXKbMlflbrE4ghJsLt9PkDkh47BNvc9sKbSsF7Fi48bZVeC29Za5LKKIaHe9g935Jeh2Mj1vc600gVvRCsQw'); // Use your actual publishable key\n\n\nfunction App() {\n      const [cart, setCart] = useState(() => {\n        const savedCart = sessionStorage.getItem(\"cart\");\n        return savedCart ? JSON.parse(savedCart) : [];\n    });\n\n    const updateSessionStorageCart = (cart) => {\n        sessionStorage.setItem(\"cart\", JSON.stringify(cart));\n    };\n\n    const removeFromCart = async (product) => {\n        console.log(\"Removing item from cart:\", product);\n    \n        // Optimistically update the cart state in the UI\n   \n        const updatedCart = cart.filter(item => item.id !== product.productId);\n        setCart(updatedCart);\n        updateSessionStorageCart(updatedCart);\n         console.log(product.productId);\n        // Remove the cart from session storage if empty\n        if (updatedCart.length === 0) {\n            sessionStorage.removeItem(\"cart\");\n        }\n    \n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/cart`, {\n                method: \"DELETE\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ userId: sessionStorage.getItem(\"user_id\"), productId: product.productId }),\n            });\n    \n            // Check if the response was successful\n            if (!response.ok) {\n                const errorMessage = await response.text();\n                throw new Error(errorMessage || \"Failed to remove item from cart\");\n            }\n    \n            // Update the cart with the server response\n            const serverCart = await response.json();\n    \n            // Ensure you use the server response to reflect the correct cart state\n            setCart(serverCart);  \n            updateSessionStorageCart(serverCart);\n            console.log(\"Updated cart state:\", updatedCart);\n\n\n\n        } catch (error) {\n            console.error(\"Error removing item from server:\", error);\n            // Revert the optimistic update if the server fails\n            setCart(cart); // Restore the cart to its previous state\n           \n        }\n    };\n    \n    return (\n        <Elements stripe={stripePromise}>\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Home removeFromCart={removeFromCart}/>} />\n                <Route path=\"/checkout\" element={<Checkout removeFromCart={removeFromCart} />} />\n                <Route path=\"/admin\" element={<AdminDashboard />} /> \n                <Route path=\"/payment\" element={<Payment/>} />\n                <Route path=\"/card\" element={< Card  />} />\n                <Route path=\"/detail\" element={<Detail/>} />\n                <Route path=\"/display\" element={<ProductDisplay/>} />\n                <Route path=\"/order\" element={<OrderConfirmation />} />\n    \n            </Routes>\n        </Router>\n        </Elements>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}