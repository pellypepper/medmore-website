{"ast":null,"code":"import'./card.css';import React,{useState,useEffect}from'react';import{useStripe,useElements,CardNumberElement,CardExpiryElement,CardCvcElement}from'@stripe/react-stripe-js';import{useLocation,useNavigate}from\"react-router-dom\";import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheckCircle,faExclamationCircle}from'@fortawesome/free-solid-svg-icons';import Spinner from'../../component/spinner';// Import the spinner component\nimport{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Card=()=>{var _location$state,_location$state2,_location$state3;const[loading,setLoading]=useState(false);const stripe=useStripe();const elements=useElements();const[error,setError]=useState(null);const[paymentMethodType,setPaymentMethodType]=useState('card');// Default to card payment\nconst[alertMessage,setAlertMessage]=useState(\"\");// State for alert message\nconst location=useLocation();const total=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.total)||0;const form=((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.form)||{};const navigate=useNavigate();const[fadeOut,setFadeOut]=useState(false);const cart=((_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.cart)||[];const handleSubmit=async event=>{event.preventDefault();if(loading)return;// Prevent double clicks\nsetLoading(true);setError(null);setAlertMessage(\"\");if(!stripe||!elements){console.error('Stripe has not been initialized.');setLoading(false);return;}try{console.log('Creating payment intent...');const response=await fetch(`${process.env.REACT_APP_API_URL}/create-payment-intent`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({amount:total,paymentMethodType})});if(!response.ok){throw new Error(`Failed to create payment intent: ${response.statusText}`);}const{clientSecret}=await response.json();if(!clientSecret){throw new Error('Client secret is missing in the response.');}console.log('Client secret received:',clientSecret);let confirmResult;if(paymentMethodType==='card'){const cardNumberElement=elements.getElement(CardNumberElement);const cardExpiryElement=elements.getElement(CardExpiryElement);const cardCvcElement=elements.getElement(CardCvcElement);// Check if all elements are available\nif(!cardNumberElement||!cardExpiryElement||!cardCvcElement){setError('Card elements are not available.');setLoading(false);return;}confirmResult=await stripe.confirmCardPayment(clientSecret,{payment_method:{card:cardNumberElement}});}else if(['apple_pay','google_pay','klarna'].includes(paymentMethodType)){// Placeholder for handling other payment methods\nconsole.log(`Payment method type '${paymentMethodType}' selected, but not implemented.`);setError(`Payment method '${paymentMethodType}' is not yet supported.`);setLoading(false);return;}if(confirmResult&&confirmResult.error){console.error('Payment failed:',confirmResult.error.message);setError(confirmResult.error.message);}else if(confirmResult&&confirmResult.paymentIntent){console.log('Payment successful:',confirmResult.paymentIntent);console.log('Payment intent ID:',confirmResult.paymentIntent.id);console.log(cart);await sendUserDataToServer(form,confirmResult.paymentIntent.id,cart);navigate('/order',{state:{order:{id:confirmResult.paymentIntent.id,total:total,email:form.email,items:cart.map(item=>({name:item.productName,// Ensure the property is correct\nquantity:item.quantity}))}}});}else{console.error('Unexpected payment confirmation result:',confirmResult);setError('An unexpected error occurred during payment confirmation.');}}catch(err){console.error('Error in payment flow:',err.message);setError(err.message);}finally{setLoading(false);// Ensure loading state is turned off\n}};const sendUserDataToServer=async(userData,paymentIntentId,cart)=>{try{const response=await fetch(`${process.env.REACT_APP_API_URL}/record-payment`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({...userData,paymentIntentId,cart})});if(!response.ok){throw new Error(`Failed to record payment: ${response.statusText}`);}const result=await response.json();console.log('User data recorded successfully:',result);// Optionally navigate to a success page or show a confirmation message\nsetAlertMessage(` \"Payment recorded successfully!\" `);}catch(error){console.error('Error recording payment:',error);setError('Failed to record payment on server.');}};useEffect(()=>{if(alertMessage||error){const timer=setTimeout(()=>{setFadeOut(true);// Trigger fade out\nconst removeAlertTimer=setTimeout(()=>{setAlertMessage(\"\");// Clear the alert after fade out\nsetError(\"\");setFadeOut(false);// Reset fade out state\n},500);// Match this time with the CSS transition duration\nreturn()=>clearTimeout(removeAlertTimer);},5000);// Keep alert message visible for 5 seconds\nreturn()=>clearTimeout(timer);// Cleanup the timer on unmount\n}},[alertMessage,error]);return/*#__PURE__*/_jsxs(\"div\",{className:\"card-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-text\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"$\",total]}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment\"})]}),loading&&/*#__PURE__*/_jsx(Spinner,{}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"mt-2\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{className:\"label\",children:[\"Payment Method:\",/*#__PURE__*/_jsxs(\"div\",{className:\"payment-div\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"card\",defaultChecked:true}),/*#__PURE__*/_jsx(\"img\",{src:\"card.jpg\",alt:\"card\"}),\" Card\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"apple_pay\"}),/*#__PURE__*/_jsx(\"img\",{src:\"apple.png\",alt:\"apple\"}),\" Apple Pay\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"google_pay\"}),/*#__PURE__*/_jsx(\"img\",{src:\"google.png\",alt:\"google\"}),\" Google Pay\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",onChange:e=>setPaymentMethodType(e.target.value),name:\"paymentMethod\",value:\"klarna\"}),/*#__PURE__*/_jsx(\"img\",{src:\"klarna.webp\",alt:\"klarna\"}),\" Klarna\"]})]})]}),paymentMethodType==='card'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-number\",children:\"Card Number\"}),/*#__PURE__*/_jsx(CardNumberElement,{id:\"card-number\",className:\"card-element full-width\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-expiry\",children:\"Expiry Date\"}),/*#__PURE__*/_jsx(CardExpiryElement,{id:\"card-expiry\",className:\"card-element\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"card-cvc\",children:\"CVV\"}),/*#__PURE__*/_jsx(CardCvcElement,{id:\"card-cvc\",className:\"card-element\",options:{style:{base:{fontSize:'16px',color:'#424770','::placeholder':{color:'#aab7c4'}},invalid:{color:'#9e2146'}}}})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button\",type:\"submit\",disabled:!stripe||loading,children:loading?'Processing...':`Pay Now $${total}`}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]})]}),alertMessage&&/*#__PURE__*/_jsxs(\"div\",{className:`success-popup ${fadeOut?'success-popup-exit':''}`,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCheckCircle,color:\"green\",size:\"2x\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment Successful\"}),/*#__PURE__*/_jsx(\"p\",{children:alertMessage})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:`error ${fadeOut?'error-exit':''}`,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faExclamationCircle,color:\"red\",size:\"2x\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Payment Declined\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"mt-1\",onClick:()=>setError(''),children:\" Try Again\"})]})]});};export default Card;","map":{"version":3,"names":["React","useState","useEffect","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","useLocation","useNavigate","FontAwesomeIcon","faCheckCircle","faExclamationCircle","Spinner","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","Card","_location$state","_location$state2","_location$state3","loading","setLoading","stripe","elements","error","setError","paymentMethodType","setPaymentMethodType","alertMessage","setAlertMessage","location","total","state","form","navigate","fadeOut","setFadeOut","cart","handleSubmit","event","preventDefault","console","log","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","amount","ok","Error","statusText","clientSecret","json","confirmResult","cardNumberElement","getElement","cardExpiryElement","cardCvcElement","confirmCardPayment","payment_method","card","includes","message","paymentIntent","id","sendUserDataToServer","order","email","items","map","item","name","productName","quantity","err","userData","paymentIntentId","result","timer","setTimeout","removeAlertTimer","clearTimeout","className","children","onSubmit","type","onChange","e","target","value","defaultChecked","src","alt","htmlFor","options","style","base","fontSize","color","invalid","disabled","icon","size","onClick"],"sources":["C:/Users/ppeli/OneDrive/Documents/GitHub/medmore-website/src/pages/card/card.js"],"sourcesContent":["import './card.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from '../../component/spinner'; // Import the spinner component\r\n\r\nconst Card = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [error, setError] = useState(null);\r\n    const [paymentMethodType, setPaymentMethodType] = useState('card'); // Default to card payment\r\n    const [alertMessage, setAlertMessage] = useState(\"\"); // State for alert message\r\n    const location = useLocation();\r\n    const total = location.state?.total || 0;\r\n    const form = location.state?.form || {};\r\n    const navigate = useNavigate();\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const cart = location.state?.cart || [];\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (loading) return; // Prevent double clicks\r\n        setLoading(true);\r\n        setError(null);\r\n        setAlertMessage(\"\");\r\n\r\n        if (!stripe || !elements) {\r\n            console.error('Stripe has not been initialized.');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log('Creating payment intent...');\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/create-payment-intent`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ amount: total, paymentMethodType }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to create payment intent: ${response.statusText}`);\r\n            }\r\n\r\n            const { clientSecret } = await response.json();\r\n            if (!clientSecret) {\r\n                throw new Error('Client secret is missing in the response.');\r\n            }\r\n\r\n            console.log('Client secret received:', clientSecret);\r\n\r\n            let confirmResult;\r\n\r\n            if (paymentMethodType === 'card') {\r\n                const cardNumberElement = elements.getElement(CardNumberElement);\r\n                const cardExpiryElement = elements.getElement(CardExpiryElement);\r\n                const cardCvcElement = elements.getElement(CardCvcElement);\r\n\r\n                // Check if all elements are available\r\n                if (!cardNumberElement || !cardExpiryElement || !cardCvcElement) {\r\n                    setError('Card elements are not available.');\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                confirmResult = await stripe.confirmCardPayment(clientSecret, {\r\n                    payment_method: {\r\n                        card: cardNumberElement,\r\n                    },\r\n                });\r\n            } else if (['apple_pay', 'google_pay', 'klarna'].includes(paymentMethodType)) {\r\n                // Placeholder for handling other payment methods\r\n                console.log(`Payment method type '${paymentMethodType}' selected, but not implemented.`);\r\n                setError(`Payment method '${paymentMethodType}' is not yet supported.`);\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            if (confirmResult && confirmResult.error) {\r\n                console.error('Payment failed:', confirmResult.error.message);\r\n                setError(confirmResult.error.message);\r\n            } else if (confirmResult && confirmResult.paymentIntent) {\r\n                console.log('Payment successful:', confirmResult.paymentIntent);\r\n                console.log('Payment intent ID:', confirmResult.paymentIntent.id);\r\n                console.log(cart);\r\n                await sendUserDataToServer(form, confirmResult.paymentIntent.id, cart);\r\n                navigate('/order', {\r\n                    state: {\r\n                        order: {\r\n                            id: confirmResult.paymentIntent.id,\r\n                            total: total,\r\n                            email: form.email,\r\n                            items: cart.map(item => ({\r\n                                name: item.productName, // Ensure the property is correct\r\n                                quantity: item.quantity,\r\n                            })),\r\n                        },\r\n                    },\r\n                });\r\n            \r\n            } else {\r\n                console.error('Unexpected payment confirmation result:', confirmResult);\r\n                setError('An unexpected error occurred during payment confirmation.');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error in payment flow:', err.message);\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false); // Ensure loading state is turned off\r\n        }\r\n    };\r\n\r\n    const sendUserDataToServer = async (userData, paymentIntentId, cart) => {\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/record-payment`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ ...userData, paymentIntentId, cart }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Failed to record payment: ${response.statusText}`);\r\n            }\r\n\r\n            const result = await response.json();\r\n            console.log('User data recorded successfully:', result);\r\n            // Optionally navigate to a success page or show a confirmation message\r\n            setAlertMessage(` \"Payment recorded successfully!\" `);\r\n        } catch (error) {\r\n            console.error('Error recording payment:', error);\r\n            setError('Failed to record payment on server.');\r\n        }\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        if (alertMessage || error) {\r\n            const timer = setTimeout(() => {\r\n                setFadeOut(true); // Trigger fade out\r\n                const removeAlertTimer = setTimeout(() => {\r\n                    setAlertMessage(\"\"); // Clear the alert after fade out\r\n                    setError(\"\");\r\n                    setFadeOut(false); // Reset fade out state\r\n                }, 500); // Match this time with the CSS transition duration\r\n\r\n                return () => clearTimeout(removeAlertTimer);\r\n            }, 5000); // Keep alert message visible for 5 seconds\r\n\r\n            return () => clearTimeout(timer); // Cleanup the timer on unmount\r\n        }\r\n    }, [alertMessage, error]);\r\n\r\n  \r\n    \r\n\r\n    return (\r\n        <div className='card-section'>\r\n            <div className='card-wrapper'>\r\n                <div className='card-text'>\r\n                    <p>${total}</p>\r\n                    <p>Payment</p>\r\n                </div>\r\n\r\n                {loading && <Spinner />} {/* Show spinner when loading */}\r\n                \r\n                <form className='mt-2' onSubmit={handleSubmit}>\r\n                    <label className='label'>\r\n                        Payment Method:\r\n                        <div className='payment-div'>\r\n                            <div>\r\n                                <input\r\n                                    type='radio'\r\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\r\n                                    name='paymentMethod'\r\n                                    value='card'\r\n                                    defaultChecked\r\n                                />\r\n                                <img src='card.jpg' alt='card' /> Card\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    type='radio'\r\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\r\n                                    name='paymentMethod'\r\n                                    value='apple_pay'\r\n                                />\r\n                                <img src='apple.png' alt='apple' /> Apple Pay\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    type='radio'\r\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\r\n                                    name='paymentMethod'\r\n                                    value='google_pay'\r\n                                />\r\n                                <img src='google.png' alt='google' /> Google Pay\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    type='radio'\r\n                                    onChange={(e) => setPaymentMethodType(e.target.value)}\r\n                                    name='paymentMethod'\r\n                                    value='klarna'\r\n                                />\r\n                                <img src='klarna.webp' alt='klarna' /> Klarna\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n\r\n                    {paymentMethodType === 'card' && (\r\n                        <>\r\n                            <label htmlFor=\"card-number\">Card Number</label>\r\n                            <CardNumberElement\r\n                                id=\"card-number\"\r\n                                className=\"card-element full-width\"\r\n                                options={{\r\n                                    style: {\r\n                                        base: {\r\n                                            fontSize: '16px',\r\n                                            color: '#424770',\r\n                                            '::placeholder': {\r\n                                                color: '#aab7c4',\r\n                                            },\r\n                                        },\r\n                                        invalid: {\r\n                                            color: '#9e2146',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n\r\n                            <label htmlFor=\"card-expiry\">Expiry Date</label>\r\n                            <CardExpiryElement\r\n                                id=\"card-expiry\"\r\n                                className=\"card-element\"\r\n                                options={{\r\n                                    style: {\r\n                                        base: {\r\n                                            fontSize: '16px',\r\n                                            color: '#424770',\r\n                                            '::placeholder': {\r\n                                                color: '#aab7c4',\r\n                                            },\r\n                                        },\r\n                                        invalid: {\r\n                                            color: '#9e2146',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n\r\n                            <label htmlFor=\"card-cvc\">CVV</label>\r\n                            <CardCvcElement\r\n                                id=\"card-cvc\"\r\n                                className=\"card-element\"\r\n                                options={{\r\n                                    style: {\r\n                                        base: {\r\n                                            fontSize: '16px',\r\n                                            color: '#424770',\r\n                                            '::placeholder': {\r\n                                                color: '#aab7c4',\r\n                                            },\r\n                                        },\r\n                                        invalid: {\r\n                                            color: '#9e2146',\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    <button className='button' type=\"submit\" disabled={!stripe || loading}>\r\n                        {loading ? 'Processing...' : `Pay Now $${total}`}\r\n                    </button>\r\n                    {error && <div className='error'>{error}</div>}\r\n                </form>\r\n            </div>\r\n\r\n            {alertMessage && (\r\n                <div className={`success-popup ${fadeOut ? 'success-popup-exit' : ''}`}>\r\n                    <FontAwesomeIcon icon={faCheckCircle} color=\"green\" size=\"2x\" />\r\n                    <p>Payment Successful</p>\r\n                    <p>{alertMessage}</p>\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div className={`error ${fadeOut ? 'error-exit' : ''}`}>\r\n                    <FontAwesomeIcon icon={faExclamationCircle} color=\"red\" size=\"2x\" />\r\n                    <p>Payment Declined</p>\r\n                    <p>{error}</p>\r\n                    <button className='mt-1' onClick={() => setError('')}> Try Again</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}