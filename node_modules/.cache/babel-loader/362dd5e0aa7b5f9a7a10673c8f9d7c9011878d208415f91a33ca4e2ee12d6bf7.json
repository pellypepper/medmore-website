{"ast":null,"code":"import React,{useState}from\"react\";import{FaChevronDown,FaChevronUp}from\"react-icons/fa\";import\"./country.css\";import{countryStateData}from\"./countryStateData\";// Ensure this is your correct import path\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Country(_ref){let{onCountrySelect,onStateSelect}=_ref;const[search,setSearch]=useState(\"\");const[filteredCountries,setFilteredCountries]=useState(Object.keys(countryStateData));const[states,setStates]=useState([]);const[selectedState,setSelectedState]=useState(\"\");const[dropdownVisible,setDropdownVisible]=useState(false);const[stateDropdownVisible,setStateDropdownVisible]=useState(false);// Handle search in country dropdown\nconst handleSearch=e=>{const value=e.target.value.toLowerCase();setSearch(value);setFilteredCountries(Object.keys(countryStateData).filter(country=>country.toLowerCase().includes(value)));};// Toggle dropdown visibility\nconst toggleDropdown=()=>{setDropdownVisible(!dropdownVisible);};// Handle country selection\nconst handleCountrySelect=country=>{setSearch(country);setStates(countryStateData[country]||[]);setSelectedState(\"\");setDropdownVisible(false);setStateDropdownVisible(false);// Reset state dropdown visibility\n// Call the provided function to update the parent component's state\nonCountrySelect(country);};// Handle state selection\nconst handleStateSelect=state=>{setSelectedState(state);setStateDropdownVisible(false);// Call the provided function to update the parent component's state\nonStateSelect(state);};// Toggle state dropdown visibility\nconst toggleStateDropdown=()=>{setStateDropdownVisible(!stateDropdownVisible);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:search,onChange:handleSearch,onFocus:()=>setDropdownVisible(true),onBlur:()=>setTimeout(()=>setDropdownVisible(false),100),placeholder:\"Search for a country...\",className:\"dropdown-input p-2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleDropdown,type:\"button\",className:\"dropdown-toggle\",children:dropdownVisible?/*#__PURE__*/_jsx(FaChevronUp,{}):/*#__PURE__*/_jsx(FaChevronDown,{})})]}),dropdownVisible&&filteredCountries.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-list\",children:filteredCountries.map((country,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleCountrySelect(country),className:\"dropdown-item\",children:country},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:selectedState,onClick:toggleStateDropdown,placeholder:\"Select a state/region...\",readOnly:true,className:\"dropdown-input p-2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleStateDropdown,type:\"button\",className:\"dropdown-toggle\",children:stateDropdownVisible?/*#__PURE__*/_jsx(FaChevronUp,{}):/*#__PURE__*/_jsx(FaChevronDown,{})})]}),stateDropdownVisible&&states.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-list\",children:states.map((state,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>handleStateSelect(state),className:\"dropdown-item\",children:state},index))})]});}","map":{"version":3,"names":["React","useState","FaChevronDown","FaChevronUp","countryStateData","jsx","_jsx","jsxs","_jsxs","Country","_ref","onCountrySelect","onStateSelect","search","setSearch","filteredCountries","setFilteredCountries","Object","keys","states","setStates","selectedState","setSelectedState","dropdownVisible","setDropdownVisible","stateDropdownVisible","setStateDropdownVisible","handleSearch","e","value","target","toLowerCase","filter","country","includes","toggleDropdown","handleCountrySelect","handleStateSelect","state","toggleStateDropdown","className","children","type","onChange","onFocus","onBlur","setTimeout","placeholder","onClick","length","map","index","readOnly"],"sources":["C:/Users/ppeli/OneDrive/Documents/GitHub/medmore-website/src/component/search/country.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"./country.css\";\r\nimport { countryStateData } from \"./countryStateData\"; // Ensure this is your correct import path\r\n\r\nexport default function Country({ onCountrySelect, onStateSelect }) {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filteredCountries, setFilteredCountries] = useState(Object.keys(countryStateData));\r\n    const [states, setStates] = useState([]);\r\n    const [selectedState, setSelectedState] = useState(\"\");\r\n    const [dropdownVisible, setDropdownVisible] = useState(false);\r\n    const [stateDropdownVisible, setStateDropdownVisible] = useState(false);\r\n\r\n    // Handle search in country dropdown\r\n    const handleSearch = (e) => {\r\n        const value = e.target.value.toLowerCase();\r\n        setSearch(value);\r\n        setFilteredCountries(\r\n            Object.keys(countryStateData).filter((country) =>\r\n                country.toLowerCase().includes(value)\r\n            )\r\n        );\r\n    };\r\n\r\n    // Toggle dropdown visibility\r\n    const toggleDropdown = () => {\r\n        setDropdownVisible(!dropdownVisible);\r\n    };\r\n\r\n    // Handle country selection\r\n    const handleCountrySelect = (country) => {\r\n        setSearch(country);\r\n        setStates(countryStateData[country] || []);\r\n        setSelectedState(\"\");\r\n        setDropdownVisible(false);\r\n        setStateDropdownVisible(false); // Reset state dropdown visibility\r\n\r\n        // Call the provided function to update the parent component's state\r\n        onCountrySelect(country);\r\n    };\r\n\r\n    // Handle state selection\r\n    const handleStateSelect = (state) => {\r\n        setSelectedState(state);\r\n        setStateDropdownVisible(false);\r\n\r\n        // Call the provided function to update the parent component's state\r\n        onStateSelect(state);\r\n    };\r\n\r\n    // Toggle state dropdown visibility\r\n    const toggleStateDropdown = () => {\r\n        setStateDropdownVisible(!stateDropdownVisible);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dropdown-wrapper\">\r\n            {/* Country Dropdown */}\r\n            <div className=\"input-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={handleSearch}\r\n                    onFocus={() => setDropdownVisible(true)}\r\n                    onBlur={() => setTimeout(() => setDropdownVisible(false), 100)}\r\n                    placeholder=\"Search for a country...\"\r\n                    className=\"dropdown-input p-2\"\r\n                />\r\n                <button\r\n                    onClick={toggleDropdown}\r\n                    type=\"button\"\r\n                    className=\"dropdown-toggle\"\r\n                >\r\n                    {dropdownVisible ? <FaChevronUp /> : <FaChevronDown />}\r\n                </button>\r\n            </div>\r\n            {dropdownVisible && filteredCountries.length > 0 && (\r\n                <ul className=\"dropdown-list\">\r\n                    {filteredCountries.map((country, index) => (\r\n                        <li\r\n                            key={index}\r\n                            onClick={() => handleCountrySelect(country)}\r\n                            className=\"dropdown-item\"\r\n                        >\r\n                            {country}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            {/* State Dropdown */}\r\n            <div className=\"input-container mt-2\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={selectedState}\r\n                    onClick={toggleStateDropdown}\r\n                    placeholder=\"Select a state/region...\"\r\n                    readOnly\r\n                    className=\"dropdown-input p-2\"\r\n                />\r\n                <button\r\n                    onClick={toggleStateDropdown}\r\n                    type=\"button\"\r\n                    className=\"dropdown-toggle\"\r\n                >\r\n                    {stateDropdownVisible ? <FaChevronUp /> : <FaChevronDown />}\r\n                </button>\r\n            </div>\r\n\r\n            {stateDropdownVisible && states.length > 0 && (\r\n                <ul className=\"dropdown-list\">\r\n                    {states.map((state, index) => (\r\n                        <li\r\n                            key={index}\r\n                            onClick={() => handleStateSelect(state)}\r\n                            className=\"dropdown-item\"\r\n                        >\r\n                            {state}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}