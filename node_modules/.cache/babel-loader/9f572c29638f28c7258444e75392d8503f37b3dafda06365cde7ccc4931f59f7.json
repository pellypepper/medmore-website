{"ast":null,"code":"import React,{useState}from'react';import Navbar from'../../component/navbar/navbar';import Footer from'../../component/footer/footer';import Spinner from'../../component/spinner';// Import the spinner component\nimport'./payment.css';import{useNavigate,useLocation}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Payment(){var _location$state,_location$state2,_location$state3;const[paymentMethod,setPaymentMethod]=useState('');const[loading,setLoading]=useState(false);// State for loading spinner\nconst navigate=useNavigate();const location=useLocation();const cart=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.cart)||[];const total=((_location$state2=location.state)===null||_location$state2===void 0?void 0:_location$state2.total)||0;const form=((_location$state3=location.state)===null||_location$state3===void 0?void 0:_location$state3.form)||{};const handleGoBack=()=>{navigate('/checkout');};const handleClick=e=>{e.preventDefault();setLoading(true);// Show spinner when processing payment method\n// Simulate network delay for navigation (this is where you'd make an API call)\nsetTimeout(()=>{console.log(cart);// Log cart for both payment methods for easier debugging\nif(paymentMethod==='bank-transfer'){navigate('/detail',{state:{total,form,cart}});}else{navigate('/card',{state:{total,form,cart}});}setLoading(false);// Hide spinner after navigation\n},1000);// Simulate a delay (adjust as necessary)\n};return/*#__PURE__*/_jsxs(\"main\",{className:\"payment-main\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"section\",{className:\"payment-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"payment-title\",children:\"Choose Payment Method\"}),loading&&/*#__PURE__*/_jsx(Spinner,{}),\" \",/*#__PURE__*/_jsxs(\"form\",{className:\"payment-options\",onSubmit:handleClick,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"payment-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"pay-online\",name:\"payment\",value:\"pay-online\",checked:paymentMethod==='pay-online',onChange:()=>setPaymentMethod('pay-online'),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pay-online\",children:\"Pay Online\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",id:\"bank-transfer\",name:\"payment\",value:\"bank-transfer\",checked:paymentMethod==='bank-transfer',onChange:()=>setPaymentMethod('bank-transfer'),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bank-transfer\",children:\"Pay Via Bank Transfer\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-btn d-flex justify-content-center\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleGoBack,className:\"payment-button\",children:\"Go Back\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"payment-button\",disabled:!paymentMethod||loading,children:loading?\"Processing...\":\"Proceed to Pay\"})]})]})]}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"names":["React","useState","Navbar","Footer","Spinner","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","Payment","_location$state","_location$state2","_location$state3","paymentMethod","setPaymentMethod","loading","setLoading","navigate","location","cart","state","total","form","handleGoBack","handleClick","e","preventDefault","setTimeout","console","log","className","children","onSubmit","type","id","name","value","checked","onChange","required","htmlFor","onClick","disabled"],"sources":["/Users/touchbar/Documents/GitHub/medmore-website/src/pages/payment/payment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from '../../component/navbar/navbar';\nimport Footer from '../../component/footer/footer';\nimport Spinner from '../../component/spinner'; // Import the spinner component\nimport './payment.css'; \nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nexport default function Payment() {\n    const [paymentMethod, setPaymentMethod] = useState('');\n    const [loading, setLoading] = useState(false); // State for loading spinner\n    const navigate = useNavigate();\n    const location = useLocation();\n    const cart = location.state?.cart || [];\n    const total = location.state?.total || 0;\n    const form = location.state?.form || {};\n\n    const handleGoBack = () => {\n        navigate('/checkout');\n    };\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        setLoading(true); // Show spinner when processing payment method\n\n        // Simulate network delay for navigation (this is where you'd make an API call)\n        setTimeout(() => {\n            console.log(cart); // Log cart for both payment methods for easier debugging\n            if (paymentMethod === 'bank-transfer') {\n                navigate('/detail', { state: { total, form, cart } }); \n            } else {\n                navigate('/card', { state: { total, form, cart } });\n            }\n            setLoading(false); // Hide spinner after navigation\n        }, 1000); // Simulate a delay (adjust as necessary)\n    };\n\n    return (\n        <main className=\"payment-main\">\n            <Navbar />\n            <section className=\"payment-section\">\n                <h2 className=\"payment-title\">Choose Payment Method</h2>\n                {loading && <Spinner />} {/* Show the spinner when loading */}\n                <form className=\"payment-options\" onSubmit={handleClick}>\n                    <div className=\"payment-option\">\n                        <input \n                            type=\"radio\" \n                            id=\"pay-online\" \n                            name=\"payment\" \n                            value=\"pay-online\" \n                            checked={paymentMethod === 'pay-online'}\n                            onChange={() => setPaymentMethod('pay-online')} \n                            required\n                        />\n                        <label htmlFor=\"pay-online\">Pay Online</label>\n                    </div>\n                    <div className=\"payment-option\">\n                        <input \n                            type=\"radio\" \n                            id=\"bank-transfer\" \n                            name=\"payment\" \n                            value=\"bank-transfer\" \n                            checked={paymentMethod === 'bank-transfer'}\n                            onChange={() => setPaymentMethod('bank-transfer')} \n                            required\n                        />\n                        <label htmlFor=\"bank-transfer\">Pay Via Bank Transfer</label>\n                    </div>\n                    <div className='payment-btn d-flex justify-content-center'>\n                        <button type=\"button\" onClick={handleGoBack} className=\"payment-button\">Go Back</button>\n                        <button type=\"submit\" className=\"payment-button\" disabled={!paymentMethod || loading}>\n                            {loading ? \"Processing...\" : \"Proceed to Pay\"}\n                        </button>\n                    </div>\n                </form>\n            </section>\n            <Footer />\n        </main>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}