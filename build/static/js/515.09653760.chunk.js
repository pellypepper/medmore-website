"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[515],{453:(e,t,a)=>{a.d(t,{A:()=>n});a(43);var r=a(579);const n=()=>(0,r.jsx)("aside",{className:"spinner-container",children:(0,r.jsx)("div",{className:"spinner"})})},515:(e,t,a)=>{a.r(t),a.d(t,{default:()=>d});var r=a(43),n=a(393),s=a(906),o=a(910),l=a(929),c=a(453),i=a(579);const d=()=>{var e,t,a;const[d,m]=(0,r.useState)(!1),p=(0,n.useStripe)(),u=(0,n.useElements)(),[y,h]=(0,r.useState)(null),[x,g]=(0,r.useState)("card"),[j,v]=(0,r.useState)(""),f=(0,s.zy)(),b=(null===(e=f.state)||void 0===e?void 0:e.total)||0,C=(null===(t=f.state)||void 0===t?void 0:t.form)||{},N=(0,s.Zp)(),[w,E]=(0,r.useState)(!1),S=(null===(a=f.state)||void 0===a?void 0:a.cart)||[],P=async(e,t,a)=>{try{const r=await fetch("https://medmorestore.onrender.com/record-payment",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,paymentIntentId:t,cart:a})});if(!r.ok)throw new Error(`Failed to record payment: ${r.statusText}`);const n=await r.json();console.log("User data recorded successfully:",n),v(' "Payment recorded successfully!" ')}catch(y){console.error("Error recording payment:",y),h("Failed to record payment on server.")}};return(0,r.useEffect)((()=>{if(j||y){const e=setTimeout((()=>{E(!0);const e=setTimeout((()=>{v(""),h(""),E(!1)}),500);return()=>clearTimeout(e)}),5e3);return()=>clearTimeout(e)}}),[j,y]),(0,i.jsxs)("div",{className:"card-section",children:[(0,i.jsxs)("div",{className:"card-wrapper",children:[(0,i.jsxs)("div",{className:"card-text",children:[(0,i.jsxs)("p",{children:["$",b]}),(0,i.jsx)("p",{children:"Payment"})]}),d&&(0,i.jsx)(c.A,{}),(0,i.jsxs)("form",{className:"mt-2",onSubmit:async e=>{if(e.preventDefault(),!d){if(m(!0),h(null),v(""),!p||!u)return console.error("Stripe has not been initialized."),void m(!1);try{console.log("Creating payment intent...");const e=await fetch("https://medmorestore.onrender.com/create-payment-intent",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({amount:b,paymentMethodType:x})});if(!e.ok)throw new Error(`Failed to create payment intent: ${e.statusText}`);const{clientSecret:t}=await e.json();if(!t)throw new Error("Client secret is missing in the response.");let a;if(console.log("Client secret received:",t),"card"===x){const e=u.getElement(n.CardNumberElement),r=u.getElement(n.CardExpiryElement),s=u.getElement(n.CardCvcElement);if(!e||!r||!s)return h("Card elements are not available."),void m(!1);a=await p.confirmCardPayment(t,{payment_method:{card:e}})}else if(["apple_pay","google_pay","klarna"].includes(x))return console.log(`Payment method type '${x}' selected, but not implemented.`),h(`Payment method '${x}' is not yet supported.`),void m(!1);a&&a.error?(console.error("Payment failed:",a.error.message),h(a.error.message)):a&&a.paymentIntent?(console.log("Payment successful:",a.paymentIntent),console.log("Payment intent ID:",a.paymentIntent.id),console.log(S),await P(C,a.paymentIntent.id,S),N("/order",{state:{order:{id:a.paymentIntent.id,total:b,email:C.email,items:S.map((e=>({name:e.productName,quantity:e.quantity})))}}})):(console.error("Unexpected payment confirmation result:",a),h("An unexpected error occurred during payment confirmation."))}catch(t){console.error("Error in payment flow:",t.message),h(t.message)}finally{m(!1)}}},children:[(0,i.jsxs)("label",{className:"label",children:["Payment Method:",(0,i.jsxs)("div",{className:"payment-div",children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("input",{type:"radio",onChange:e=>g(e.target.value),name:"paymentMethod",value:"card",defaultChecked:!0}),(0,i.jsx)("img",{src:"card.webp",alt:"card"})," Card"]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("input",{type:"radio",onChange:e=>g(e.target.value),name:"paymentMethod",value:"apple_pay"}),(0,i.jsx)("img",{src:"apple.webp",alt:"apple"})," Apple Pay"]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("input",{type:"radio",onChange:e=>g(e.target.value),name:"paymentMethod",value:"google_pay"}),(0,i.jsx)("img",{src:"google.webp",alt:"google"})," Google Pay"]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("input",{type:"radio",onChange:e=>g(e.target.value),name:"paymentMethod",value:"klarna"}),(0,i.jsx)("img",{src:"klarna.webp",alt:"klarna"})," Klarna"]})]})]}),"card"===x&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("label",{htmlFor:"card-number",children:"Card Number"}),(0,i.jsx)(n.CardNumberElement,{id:"card-number",className:"card-element full-width",options:{style:{base:{fontSize:"16px",color:"#424770","::placeholder":{color:"#aab7c4"}},invalid:{color:"#9e2146"}}}}),(0,i.jsx)("label",{htmlFor:"card-expiry",children:"Expiry Date"}),(0,i.jsx)(n.CardExpiryElement,{id:"card-expiry",className:"card-element",options:{style:{base:{fontSize:"16px",color:"#424770","::placeholder":{color:"#aab7c4"}},invalid:{color:"#9e2146"}}}}),(0,i.jsx)("label",{htmlFor:"card-cvc",children:"CVV"}),(0,i.jsx)(n.CardCvcElement,{id:"card-cvc",className:"card-element",options:{style:{base:{fontSize:"16px",color:"#424770","::placeholder":{color:"#aab7c4"}},invalid:{color:"#9e2146"}}}})]}),(0,i.jsx)("button",{className:"button",type:"submit",disabled:!p||d,children:d?"Processing...":`Pay Now $${b}`}),y&&(0,i.jsx)("div",{className:"error",children:y})]})]}),j&&(0,i.jsxs)("div",{className:"success-popup "+(w?"success-popup-exit":""),children:[(0,i.jsx)(o.g,{icon:l.SGM,color:"green",size:"2x"}),(0,i.jsx)("p",{children:"Payment Successful"}),(0,i.jsx)("p",{children:j})]}),y&&(0,i.jsxs)("div",{className:"error "+(w?"error-exit":""),children:[(0,i.jsx)(o.g,{icon:l.tUE,color:"red",size:"2x"}),(0,i.jsx)("p",{children:"Payment Declined"}),(0,i.jsx)("p",{children:y}),(0,i.jsx)("button",{className:"mt-1",onClick:()=>h(""),children:" Try Again"})]})]})}}}]);
//# sourceMappingURL=515.09653760.chunk.js.map