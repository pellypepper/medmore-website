{"version":3,"file":"static/js/425.eb9b922e.chunk.js","mappings":"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","sources":["component/footer/footer.js","component/cart/cartitem.js","component/cart/cart.js","component/navbar/navbar.js","component/spinner.js","component/product/productcard.js","component/product/product.js","pages/home/home.js"],"sourcesContent":["import React from 'react';\nimport { FaCcVisa, FaCcMastercard, FaCcAmex, FaCcDiscover,FaMapMarkerAlt, FaPhoneAlt } from 'react-icons/fa';\nimport './footer.css';\n\n\n\nexport default function Footer() {\n    return (\n        <footer>\n            <div className=\"footer-wrapper\">\n                <div className=\"row p-3\">\n                    <div className='col-12 col-md-6'>\n                        <h3>CONTACT US</h3>\n                        <div className='d-flex flex-row row-1 mt-4'>\n                        <FaPhoneAlt size={20} color=\"green\" />\n                            <p>07398653511</p>\n                        </div>\n                        <div className='d-flex flex-row row-1'>\n                        <FaMapMarkerAlt size={20} color=\"red\" />\n                            <p>35 Golders Green Liverpool L7 6HG</p>\n                        </div>\n                        <div className='d-flex icon-wrapper mt-2'>\n                        <FaCcVisa size={50} color=\"#1a1f71\" title=\"Visa\" />\n                        <FaCcMastercard size={50} color=\"#ff5f00\" title=\"MasterCard\" />\n                        <FaCcAmex size={50} color=\"#2e77bc\" title=\"American Express\" />\n                        <FaCcDiscover size={50} color=\"#ff6000\" title=\"Discover\" />\n                        </div>\n\n                    </div>\n\n                    <div className='col-12 col-md-6 mt-5 mt-md-0 footer-2'>\n                       <h3>SIGNUP FOR DISCOUNT AND UPDATE</h3>\n                       <textarea placeholder=\"Enter your email\"></textarea>\n                       <button>Submit</button>\n                    </div>\n                </div>\n            </div>\n\n              <div className=\"footer-bottom\">\n              <p>© 2021 FoodStuff. All Rights Reserved</p>\n                </div>\n        </footer>\n    )\n}","// CartItem.js\nimport React from \"react\";\nimport \"./cart.css\";\n\nexport default function CartItem({ product, index, onIncrease, onDecrease, onRemove }) {\n    console.log(\"CartItem.js: product:\", product.name);\n    return (\n        <div key={index} className=\"cart-item\">\n            <div className=\"cart-item-details\">\n                <p>{product.productName}</p>\n                <p>£{(product.price * product.quantity).toFixed(2)}</p>\n            </div>\n            <div className=\"cart-item-controls\">\n                <div className=\"quantity-controls\">\n                    <button className=\"btn-1\" onClick={() => onDecrease(index)}>-</button>\n                    <span>{product.quantity}</span>\n                    <button className=\"btn-1\" onClick={() => onIncrease(index)}>+</button>\n                </div>\n                <button className=\"btn-2\" onClick={() => onRemove(product)}>Remove</button>\n            </div>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport CartItem from \"./cartitem\";\nimport \"./cart.css\";\n\nexport default function Cart({ removeFromCart, cartRef }) {\n    const loadCart = () => JSON.parse(sessionStorage.getItem(\"cart\")) || [];\n    const [cart, setCart] = useState(loadCart());\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [fadeOut, setFadeOut] = useState(false);\n    const navigate = useNavigate();\n\n    const updateCart = (newCart) => {\n        setCart(newCart);\n        sessionStorage.setItem(\"cart\", JSON.stringify(newCart));\n    };\n\n    const handleCartClose = () => {\n        if (cartRef?.current) {\n            cartRef.current.classList.remove(\"active\");\n        }\n    };\n\n    const handleCheckout = () => {\n        // Directly navigate to checkout without a loading state\n        navigate(\"/checkout\", { state: { cart } });\n    };\n\n    const handleRemoveFromCart = (product) => {\n        removeFromCart(product);\n        updateCart(cart.filter((item) => item.productId !== product.productId));\n        setAlertMessage(`${product.productName} has been removed from your cart.`);\n    };\n\n    useEffect(() => {\n        if (alertMessage) {\n            const timer = setTimeout(() => setFadeOut(true), 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [alertMessage]);\n\n    return (\n        <main className=\"cart-main\">\n            <div className=\"cart-section\">\n                <div className=\"cart-section-text\">\n                    <FaTimes className=\"times\" onClick={handleCartClose} />\n                    <h2>Shopping Cart</h2>\n                </div>\n                <div className=\"cart-list\">\n                    {cart.length === 0 ? (\n                        <p>Your cart is empty</p>\n                    ) : (\n                        cart.map((product, index) => (\n                            <CartItem\n                                key={index}\n                                product={product}\n                                index={index}\n                                onIncrease={() =>\n                                    updateCart(cart.map((item, i) =>\n                                        i === index\n                                            ? { ...item, quantity: item.quantity + 1 }\n                                            : item\n                                    ))\n                                }\n                                onDecrease={() =>\n                                    updateCart(cart.map((item, i) =>\n                                        i === index && item.quantity > 1\n                                            ? { ...item, quantity: item.quantity - 1 }\n                                            : item\n                                    ))\n                                }\n                                onRemove={handleRemoveFromCart}\n                            />\n                        ))\n                    )}\n                </div>\n                <div className=\"cart-total\">\n                    <h4>\n                        Total: £\n                        {cart.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2)}\n                    </h4>\n                    <button onClick={handleCheckout}>Proceed to Checkout</button>\n                </div>\n                {alertMessage && (\n                    <div className={`alert-popup ${fadeOut ? \"alert-popup-exit\" : \"\"}`}>\n                        {alertMessage}\n                    </div>\n                )}\n            </div>\n        </main>\n    );\n}\n","import React, { useRef, useState } from \"react\";\nimport { FaSearch, FaTimes, FaBars, FaUser, FaShoppingCart } from \"react-icons/fa\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport Cart from \"../cart/cart\";\nimport Spinner from \"../spinner\";\n\nexport default function Navbar({ cart, setCart, removeFromCart, setSearchQuery }) {\n    const menuRef = useRef(null);\n    const searchRef = useRef(null);\n    const loginRef = useRef(null);\n    const cartRef = useRef(null);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false); // Track loading state\n    const navigate = useNavigate();\n\n    // Utility functions for toggling menu visibility\n    const toggleVisibility = (ref) => ref.current?.classList.toggle(\"active\");\n    const closeVisibility = (ref) => ref.current?.classList.remove(\"active\");\n\n    const handleLoginFormSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!email || !password) {\n            alert(\"Please enter both email and password.\");\n            return;\n        }\n\n        setLoading(true);\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n                method: \"POST\",\n                credentials: \"include\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ email, password }),\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                alert(errorData.error || \"Login failed\");\n                return;\n            }\n\n            const data = await response.json();\n            console.log(\"Login successful:\", data);\n\n            if (data.user?.isadmin) {\n                navigate(\"/admin\"); // Redirect to admin page if user is admin\n            } else {\n                alert(\"You do not have permission to access the admin page.\");\n            }\n        } catch (error) {\n            console.error(\"Network error:\", error);\n            alert(\"An error occurred. Please try again later.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <main className=\"main\">\n            <div className=\"container-fluid\">\n                <div className=\"row h-100\">\n                    <div className=\"logo-wrapper col-6\">\n                        <Link to=\"/\"><div className=\"logo\">MEDMORE</div>\n</Link>\n                    </div>\n                    <nav className=\"col-6 d-flex justify-content-end\">\n                        <button onClick={() => toggleVisibility(searchRef)} className=\"rounded-pill\">\n                            <FaSearch className=\"icon\" />\n                        </button>\n                        <button onClick={() => toggleVisibility(loginRef)} className=\"rounded-pill\">\n                            <FaUser className=\"icon\" />\n                        </button>\n                        <button onClick={() => toggleVisibility(menuRef)} className=\"rounded-pill\">\n                            <FaBars className=\"icon\" />\n                        </button>\n                        <button onClick={() => toggleVisibility(cartRef)} className=\"rounded-pill\">\n                            <FaShoppingCart className=\"icon\" />\n                        </button>\n                    </nav>\n                </div>\n            </div>\n\n            {/* Sidebar Menu */}\n            <aside className=\"side-menu\" ref={menuRef}>\n                <div onClick={() => closeVisibility(menuRef)} className=\"close-div\">\n                    <FaTimes className=\"times\" />\n                </div>\n                <nav>\n                    <ul>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <p></p>\n                        <li><Link to=\"/about\">About</Link></li>\n                        <p></p>\n                        <li><Link to=\"/services\">Services</Link></li>\n                        <p></p>\n                        <li><Link to=\"/contact\">Contact</Link></li>\n                        <p></p>\n                    </ul>\n                </nav>\n            </aside>\n\n            {/* Search Form */}\n            <form className=\"form\" ref={searchRef} onSubmit={(e) => e.preventDefault()}>\n                <input\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                />\n                <FaTimes onClick={() => closeVisibility(searchRef)} className=\"times\" />\n            </form>\n\n            {/* Login Modal */}\n            <div className=\"login\" ref={loginRef}>\n                <div className=\"login-wrapper\">\n                    <FaTimes onClick={() => closeVisibility(loginRef)} className=\"times\" />\n                    <h3>LOGIN</h3>\n                    <p className=\"border\"></p>\n                    <form onSubmit={handleLoginFormSubmit}>\n                        <input\n                            placeholder=\"Email Address\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            type=\"email\"\n                            required\n                        />\n                        <input\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            type=\"password\"\n                            required\n                        />\n                        <div className=\"remember-wrapper\">\n                            <div className=\"d-flex\">\n                                <input type=\"checkbox\" />\n                                <span>Remember me</span>\n                            </div>\n                            <Link to=\"/forgot-password\">Forgot Password?</Link>\n                        </div>\n                        <button type=\"submit\">\n                            {loading ? <Spinner /> : \"Submit\"}\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n            {/* Cart Modal */}\n            <div ref={cartRef} className=\"cart\">\n                <Cart\n                    cartRef={cartRef}\n                    cart={cart}\n                    removeFromCart={removeFromCart}\n                    setCart={setCart}\n                />\n            </div>\n        </main>\n    );\n}\n","import React from \"react\";\nimport \"./spinner.css\"; \n\nconst Spinner = () => {\n    return (\n        <aside className=\"spinner-container\">\n            <div className=\"spinner\"></div>\n        </aside>\n    );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Spinner from \"../spinner\"; // Adjust the path according to your project structure\nimport \"./product.css\";\n\nconst ProductCard = ({ product, addToCart }) => {\n    const [quantity, setQuantity] = useState(1);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [fadeOut, setFadeOut] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    const updateQuantity = (delta) => setQuantity((prev) => Math.max(1, prev + delta));\n\n    const handleProductDisplay = (e) => {\n        e.preventDefault();\n        navigate(\"/display\", { state: { product } });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        try {\n        \n         \n            addToCart(product, quantity);\n            setAlertMessage(`${quantity} ${product.name} added to cart.`);\n            // await new Promise((resolve) => setTimeout(resolve, 100));\n        } catch (error) {\n            console.error('Failed to add to cart:', error);\n            setAlertMessage('Failed to add product to cart.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (alertMessage) {\n            const timer = setTimeout(() => setFadeOut(true), 5000);\n            return () => clearTimeout(timer);\n        }\n    }, [alertMessage]);\n \n\n   \n\n//  const imageUrl = product.img\n\n\n    return (\n        <div className=\" card\">\n            {loading && <Spinner />}\n            <img\n                onClick={handleProductDisplay}\n                src={product.img}\n                className=\"card-img rounded-0\"\n                alt={product.name}\n                role=\"button\"\n                aria-label={`View details of ${product.name}`}\n    \n               \n            />\n            <div className=\"card-body\">\n                <p className=\"card-title\">{product.name}</p>\n                <p>£{product.price}</p>\n                <form className=\"product-form\" onSubmit={handleSubmit}>\n                    <div className=\"quantity-controls\">\n                        <button type=\"button\" onClick={() => updateQuantity(-1)}>-</button>\n                        <span>{quantity}</span>\n                        <button type=\"button\" onClick={() => updateQuantity(1)}>+</button>\n                    </div>\n                    <button type=\"submit\" disabled={loading}>\n                        {loading ? \"Adding...\" : \"Add to Cart\"}\n                    </button>\n                </form>\n                {alertMessage && (\n                    <div className={`alert-popup ${fadeOut ? \"alert-popup-exit\" : \"\"}`}>\n                        {alertMessage}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default ProductCard;\n","import React, { useState, useEffect } from \"react\";\nimport ProductCard from \"./productcard\"; // Ensure the correct case is used\nimport Spinner from \"../spinner\"; // Ensure the correct case is used\nimport \"./product.css\";\n\nconst ProductSlider = ({ addToCart, searchQuery }) => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const itemsPerPage = 10;\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\n                if (!response.ok) throw new Error(\"Failed to fetch products\");\n                const data = await response.json();\n                setProducts(data);\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n                alert(\"Could not fetch products. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    const filteredProducts = products.filter((product) =>\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    const currentProducts = filteredProducts.slice(\n        currentIndex,\n        currentIndex + itemsPerPage\n    );\n\n    return (\n        <div>\n            {loading ? (\n                <Spinner />\n            ) : (\n                <>\n                    <div className=\"product-container\">\n                        {currentProducts.length > 0 ? (\n                            currentProducts.map((product) => (\n                                <ProductCard\n                                    key={product.id}\n                                    product={product}\n                                    addToCart={addToCart}\n                                />\n                            ))\n                        ) : (\n                            <p>No products found</p>\n                        )}\n                    </div>\n                    {filteredProducts.length > itemsPerPage && (\n                        <div className=\"navigation-buttons\">\n                            <button\n                                onClick={() => setCurrentIndex((prev) => Math.max(0, prev - itemsPerPage))}\n                                disabled={currentIndex === 0} // Disable if at the first page\n                            >\n                                Previous\n                            </button>\n                            <button\n                                onClick={() =>\n                                    setCurrentIndex((prev) =>\n                                        Math.min(filteredProducts.length - itemsPerPage, prev + itemsPerPage)\n                                    )\n                                }\n                                disabled={currentIndex + itemsPerPage >= filteredProducts.length} // Disable if at the last page\n                            >\n                                Next\n                            </button>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ProductSlider;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./home.css\";\nimport Navbar from \"../../component/navbar/navbar\";\nimport Footer from \"../../component/footer/footer\";\nimport ProductSlider from \"../../component/product/product\";\nimport { FaWhatsapp } from \"react-icons/fa\";\nimport Spinner from \"../../component/spinner\";\n\nexport default function Home({ removeFromCart }) {\n    const [cart, setCart] = useState(() => {\n        const savedCart = sessionStorage.getItem(\"cart\");\n        return savedCart ? JSON.parse(savedCart) : [];\n    });\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [fadeOut, setFadeOut] = useState(false);\n    const [loadingProducts, setLoadingProducts] = useState(true);\n    const [loadingCart, setLoadingCart] = useState(true);\n\n\n    const getUserId = () => {\n        let userId = sessionStorage.getItem(\"user_id\");\n        if (!userId) {\n            userId = \"user_\" + Math.random().toString(36).substring(2, 15);\n            sessionStorage.setItem(\"user_id\", userId);\n        }\n        return userId;\n    };\n\n    const updateSessionStorageCart = (cart) => {\n        sessionStorage.setItem(\"cart\", JSON.stringify(cart));\n    };\n\n    const fetchCart = useCallback(async () => {\n        const userId = getUserId(); // Retrieve the user ID\n        setLoadingCart(true); // Start loading\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/cart/${userId}`);\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n            const cartData = await response.json();\n            setCart(cartData); // Update cart state\n            updateSessionStorageCart(cartData); // Update session storage\n        } catch (error) {\n            console.error(\"Error fetching cart:\", error);\n            setCart([]); // Reset cart to an empty array on error\n        } finally {\n            setLoadingCart(false); // Stop loading\n        }\n    }, []); \n\n\n    const addToCart = async (product, quantity) => {\n        const userId = getUserId();\n        const parsedQuantity = parseInt(quantity);\n        setCart(prevCart => {\n            const existingProductIndex = prevCart.findIndex(item => item.id === product.id);\n            let updatedCart;\n    \n            if (existingProductIndex > -1) {\n                updatedCart = prevCart.map((item, index) =>\n                    index === existingProductIndex\n                        ? { ...item, quantity: item.quantity + parsedQuantity }\n                        : item\n                );\n            } else {\n                updatedCart = [...prevCart, { ...product, quantity: parsedQuantity }];\n            }\n    \n            return updatedCart; // Return new cart state\n        });\n    \n        updateSessionStorageCart(cart); // Update session storage before server update\n    \n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/cart`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    userId: userId,\n                    product: {\n                        id: product.id,\n                        name: product.name,\n                        price: product.price,\n                        img: product.img,\n                    },\n                    quantity: parsedQuantity,\n                }),\n            });\n    \n            if (!response.ok) {\n                throw new Error(\"Failed to add item to cart\");\n            }\n    \n            const updatedCartFromServer = await response.json();\n            if (JSON.stringify(cart) !== JSON.stringify(updatedCartFromServer)) {\n                setCart(updatedCartFromServer);\n                updateSessionStorageCart(updatedCartFromServer);\n            }\n            \n            // Refetch the cart data after adding an item\n            await fetchCart();// Add this line to refetch the cart data after adding an item\n            setAlertMessage(`${product.name} has been added to the cart.`);\n        } catch (error) {\n            console.error(\"Error updating cart on server:\", error);\n            // Optionally revert or handle error\n        }\n    };\n    \n\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            setLoadingProducts(false);\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\n                if (!response.ok) throw new Error(\"Failed to fetch products\");\n                const data = await response.json();\n                setProducts(data);\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n                alert(\"Could not fetch products. Please try again later.\");\n            } finally {\n                setLoadingProducts(false);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n  useEffect(() => {\n        fetchCart(); // Call fetchCart function\n    }, [fetchCart]); // Add fetchCart to dependencies\n\n\n\n    \n\n    useEffect(() => {\n        if (alertMessage) {\n            const timer = setTimeout(() => {\n                setFadeOut(true);\n            }, 5000);\n\n            return () => clearTimeout(timer);\n        } else {\n            setFadeOut(false);\n        }\n    }, [alertMessage]);\n\n    useEffect(() => {\n        if (searchQuery) {\n            const filtered = products.filter(product =>\n                product.name.toLowerCase().includes(searchQuery.toLowerCase())\n            );\n            setFilteredProducts(filtered);\n        } else {\n            setFilteredProducts(products); // Show all products when search query is empty\n        }\n    }, [searchQuery, products]);\n\n    if (loadingCart) {\n        return <Spinner />;\n    }\n\n    return (\n        <main className=\"Home\">\n            <Navbar removeFromCart={removeFromCart} cart={cart} setCart={setCart} setSearchQuery={setSearchQuery} />\n            <section className=\"home-text-wrapper\">\n                <div className=\"row p-5 text-center\">\n                    <div className=\"home-text\">\n                        <h1>Welcome to MedMore Store</h1>\n                        <span>Where you can find the best food products</span>\n                    </div>\n                    <div className=\"home-btn d-flex flex-column flex-md-row justify-content-center mt-4\">\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">New Product</button>\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">All Products</button>\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">Our Favorites</button>\n                    </div>\n                </div>\n            </section>\n\n            <section>\n                {loadingProducts ? (\n                   <Spinner />\n                ) : (\n                    <ProductSlider\n                    products={filteredProducts}\n                        addToCart={addToCart}\n                        searchQuery={searchQuery}\n                    />\n                )}\n            </section>\n\n            {alertMessage && (\n                <div className={`alert-popup ${fadeOut ? 'alert-popup-exit' : ''}`}>\n                    {alertMessage}\n                </div>\n            )}\n\n            <section className=\"footer mt-5\">\n                <Footer />\n            </section>\n\n            <div className=\"whatsapp-logo\">\n                <a\n                    href=\"https://wa.me/4407398653511\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"whatsapp-button\"\n                >\n                    <FaWhatsapp size={40} color=\"#25D366\" />\n                </a>\n            </div>\n        </main>\n    );\n}\n"],"names":["Footer","_jsxs","children","_jsx","className","FaPhoneAlt","size","color","FaMapMarkerAlt","FaCcVisa","title","FaCcMastercard","FaCcAmex","FaCcDiscover","placeholder","CartItem","_ref","product","index","onIncrease","onDecrease","onRemove","console","log","name","productName","price","quantity","toFixed","onClick","Cart","removeFromCart","cartRef","cart","setCart","useState","JSON","parse","sessionStorage","getItem","alertMessage","setAlertMessage","fadeOut","setFadeOut","navigate","useNavigate","updateCart","newCart","setItem","stringify","handleRemoveFromCart","filter","item","productId","useEffect","timer","setTimeout","clearTimeout","FaTimes","handleCartClose","current","classList","remove","length","map","i","reduce","total","handleCheckout","state","Navbar","setSearchQuery","menuRef","useRef","searchRef","loginRef","email","setEmail","password","setPassword","loading","setLoading","toggleVisibility","ref","_ref$current","toggle","closeVisibility","_ref$current2","Link","to","FaSearch","FaUser","FaBars","FaShoppingCart","onSubmit","e","preventDefault","type","onChange","target","value","async","_data$user","response","fetch","method","credentials","headers","body","ok","errorData","json","alert","error","data","user","isadmin","required","Spinner","addToCart","setQuantity","updateQuantity","delta","prev","Math","max","src","img","alt","role","disabled","searchQuery","products","setProducts","currentIndex","setCurrentIndex","itemsPerPage","Error","fetchProducts","filteredProducts","toLowerCase","includes","currentProducts","slice","_Fragment","ProductCard","id","min","Home","savedCart","setFilteredProducts","loadingProducts","setLoadingProducts","loadingCart","setLoadingCart","getUserId","userId","random","toString","substring","updateSessionStorageCart","fetchCart","useCallback","status","cartData","filtered","ProductSlider","parsedQuantity","parseInt","prevCart","existingProductIndex","findIndex","updatedCart","updatedCartFromServer","href","rel","FaWhatsapp"],"sourceRoot":""}