{"version":3,"file":"static/js/425.b9700a6a.chunk.js","mappings":"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","sources":["component/footer/footer.js","component/cart/cartitem.js","component/cart/cart.js","component/navbar/navbar.js","component/spinner.js","component/product/productcard.js","component/product/product.js","pages/home/home.js"],"sourcesContent":["import React from 'react';\r\nimport { FaCcVisa, FaCcMastercard, FaCcAmex, FaCcDiscover, FaMapMarkerAlt, FaPhoneAlt } from 'react-icons/fa';\r\nimport './footer.css';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer-wrapper\">\r\n                <div className=\"row p-3\">\r\n                    <div className='col-12 col-md-6'>\r\n                        <p>CONTACT US</p>\r\n                        <div className='d-flex flex-row row-1 mt-4'>\r\n                            <span aria-label=\"Phone\"><FaPhoneAlt size={20} color=\"green\" /></span>\r\n                            <span>07398653511</span>\r\n                        </div>\r\n                        <div className='d-flex flex-row row-1'>\r\n                            <span aria-label=\"Location\"><FaMapMarkerAlt size={20} color=\"red\" /></span>\r\n                            <p>35 Golders Green Liverpool L7 6HG</p>\r\n                        </div>\r\n                        <div className='d-flex icon-wrapper mt-2'>\r\n                            <span aria-label=\"Visa\"><FaCcVisa size={50} color=\"#1a1f71\" /></span>\r\n                            <span aria-label=\"MasterCard\"><FaCcMastercard size={50} color=\"#ff5f00\" /></span>\r\n                            <span aria-label=\"American Express\"><FaCcAmex size={50} color=\"#2e77bc\" /></span>\r\n                            <span aria-label=\"Discover\"><FaCcDiscover size={50} color=\"#ff6000\" /></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='col-12 col-md-6 footer-2'>\r\n                        <p>SIGN UP FOR DISCOUNT AND UPDATES</p>\r\n                        <textarea placeholder=\"Enter your email\"></textarea>\r\n                        <button>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer-bottom\">\r\n                <p>© 2024 MedMore Foods. All Rights Reserved</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n","// CartItem.js\r\nimport React from \"react\";\r\nimport \"./cart.css\";\r\n\r\nexport default function CartItem({ product, index, onIncrease, onDecrease, onRemove }) {\r\n    console.log(\"CartItem.js: product:\", product.name);\r\n    return (\r\n        <div key={index} className=\"cart-item\">\r\n            <div className=\"cart-item-details\">\r\n                <p>{product.productName}</p>\r\n                <p>£{(product.price * product.quantity).toFixed(2)}</p>\r\n            </div>\r\n            <div className=\"cart-item-controls\">\r\n                <div className=\"quantity-controls\">\r\n                    <button className=\"btn-1\" onClick={() => onDecrease(index)}>-</button>\r\n                    <span>{product.quantity}</span>\r\n                    <button className=\"btn-1\" onClick={() => onIncrease(index)}>+</button>\r\n                </div>\r\n                <button className=\"btn-2\" onClick={() => onRemove(product)}>Remove</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CartItem from \"./cartitem\";\r\nimport \"./cart.css\";\r\n\r\nexport default function Cart({ removeFromCart, cartRef }) {\r\n    const loadCart = () => JSON.parse(sessionStorage.getItem(\"cart\")) || [];\r\n    const [cart, setCart] = useState(loadCart());\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const updateCart = (newCart) => {\r\n        setCart(newCart);\r\n        sessionStorage.setItem(\"cart\", JSON.stringify(newCart));\r\n    };\r\n\r\n    const handleCartClose = () => {\r\n        if (cartRef?.current) {\r\n            cartRef.current.classList.remove(\"active\");\r\n        }\r\n    };\r\n\r\n    const handleCheckout = () => {\r\n        // Directly navigate to checkout without a loading state\r\n        navigate(\"/checkout\", { state: { cart } });\r\n    };\r\n\r\n    const handleRemoveFromCart = (product) => {\r\n        removeFromCart(product);\r\n        updateCart(cart.filter((item) => item.productId !== product.productId));\r\n        setAlertMessage(`${product.productName} has been removed from your cart.`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (alertMessage) {\r\n            const timer = setTimeout(() => setFadeOut(true), 5000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [alertMessage]);\r\n\r\n    return (\r\n        <main className=\"cart-main\">\r\n            <div className=\"cart-section\">\r\n                <div className=\"cart-section-text\">\r\n                    <FaTimes className=\"times\" onClick={handleCartClose} />\r\n                    <h2>Shopping Cart</h2>\r\n                </div>\r\n                <div className=\"cart-list\">\r\n                    {cart.length === 0 ? (\r\n                        <p>Your cart is empty</p>\r\n                    ) : (\r\n                        cart.map((product, index) => (\r\n                            <CartItem\r\n                                key={index}\r\n                                product={product}\r\n                                index={index}\r\n                                onIncrease={() =>\r\n                                    updateCart(cart.map((item, i) =>\r\n                                        i === index\r\n                                            ? { ...item, quantity: item.quantity + 1 }\r\n                                            : item\r\n                                    ))\r\n                                }\r\n                                onDecrease={() =>\r\n                                    updateCart(cart.map((item, i) =>\r\n                                        i === index && item.quantity > 1\r\n                                            ? { ...item, quantity: item.quantity - 1 }\r\n                                            : item\r\n                                    ))\r\n                                }\r\n                                onRemove={handleRemoveFromCart}\r\n                            />\r\n                        ))\r\n                    )}\r\n                </div>\r\n                <div className=\"cart-total\">\r\n                    <h4>\r\n                        Total: £\r\n                        {cart.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2)}\r\n                    </h4>\r\n                    <button onClick={handleCheckout}>Proceed to Checkout</button>\r\n                </div>\r\n                {alertMessage && (\r\n                    <div className={`alert-popup ${fadeOut ? \"alert-popup-exit\" : \"\"}`}>\r\n                        {alertMessage}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { FaSearch, FaTimes, FaBars, FaUser, FaShoppingCart } from \"react-icons/fa\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"./navbar.css\";\r\nimport Cart from \"../cart/cart\";\r\nimport Spinner from \"../spinner\";\r\n\r\nexport default function Navbar({ cart, setCart, removeFromCart, setSearchQuery }) {\r\n    const menuRef = useRef(null);\r\n    const searchRef = useRef(null);\r\n    const loginRef = useRef(null);\r\n    const cartRef = useRef(null);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false); // Track loading state\r\n    const navigate = useNavigate();\r\n\r\n    // Utility functions for toggling menu visibility\r\n    const toggleVisibility = (ref) => ref.current?.classList.toggle(\"active\");\r\n    const closeVisibility = (ref) => ref.current?.classList.remove(\"active\");\r\n\r\n    const handleLoginFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!email || !password) {\r\n            alert(\"Please enter both email and password.\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json();\r\n                alert(errorData.error || \"Login failed\");\r\n                return;\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log(\"Login successful:\", data);\r\n\r\n            if (data.user?.isadmin) {\r\n                navigate(\"/admin\"); // Redirect to admin page if user is admin\r\n            } else {\r\n                alert(\"You do not have permission to access the admin page.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Network error:\", error);\r\n            alert(\"An error occurred. Please try again later.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"logo-wrapper col-6\">\r\n                        <Link to=\"/\"><div className=\"logo\">MEDMORE</div>\r\n</Link>\r\n                    </div>\r\n                    <nav className=\"col-6 d-flex justify-content-end\">\r\n                        <button onClick={() => toggleVisibility(searchRef)} aria-label=\"Search Button\" className=\"rounded-pill\">\r\n                            <FaSearch className=\"icon\" />\r\n                        </button>\r\n                        <button onClick={() => toggleVisibility(loginRef)} aria-label=\"Profile-icon\" className=\"rounded-pill\">\r\n                            <FaUser className=\"icon\" />\r\n                        </button>\r\n                        <button onClick={() => toggleVisibility(menuRef)} aria-label=\"Menu-icon\" className=\"rounded-pill\">\r\n                            <FaBars className=\"icon\" />\r\n                        </button>\r\n                        <button onClick={() => toggleVisibility(cartRef)} aria-label=\"Shopping-cart\" className=\"rounded-pill\">\r\n                            <FaShoppingCart className=\"icon\" />\r\n                        </button>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sidebar Menu */}\r\n            <aside className=\"side-menu\" ref={menuRef}>\r\n                <div onClick={() => closeVisibility(menuRef)} className=\"close-div\">\r\n                    <FaTimes className=\"times\" />\r\n                </div>\r\n                <nav>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <p></p>\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <p></p>\r\n                        <li><Link to=\"/services\">Services</Link></li>\r\n                        <p></p>\r\n                        <li><Link to=\"/contact\">Contact</Link></li>\r\n                        <p></p>\r\n                    </ul>\r\n                </nav>\r\n            </aside>\r\n\r\n            {/* Search Form */}\r\n            <form className=\"form\" ref={searchRef} onSubmit={(e) => e.preventDefault()}>\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n                <FaTimes onClick={() => closeVisibility(searchRef)} className=\"times\" />\r\n            </form>\r\n\r\n            {/* Login Modal */}\r\n            <div className=\"login\" ref={loginRef}>\r\n                <div className=\"login-wrapper\">\r\n                    <FaTimes onClick={() => closeVisibility(loginRef)} className=\"times\" />\r\n                    <h3>LOGIN</h3>\r\n                    <p className=\"border\"></p>\r\n                    <form onSubmit={handleLoginFormSubmit}>\r\n                        <input\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            type=\"email\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            type=\"password\"\r\n                            required\r\n                        />\r\n                        <div className=\"remember-wrapper\">\r\n                            <div className=\"d-flex\">\r\n                                <input type=\"checkbox\" />\r\n                                <span>Remember me</span>\r\n                            </div>\r\n                            <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                        </div>\r\n                        <button type=\"submit\">\r\n                            {loading ? <Spinner /> : \"Submit\"}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Cart Modal */}\r\n            <div ref={cartRef} className=\"cart\">\r\n                <Cart\r\n                    cartRef={cartRef}\r\n                    cart={cart}\r\n                    removeFromCart={removeFromCart}\r\n                    setCart={setCart}\r\n                />\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./spinner.css\"; \r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <aside className=\"spinner-container\">\r\n            <div className=\"spinner\"></div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from \"../spinner\"; // Adjust the path according to your project structure\r\nimport \"./product.css\";\r\n\r\nconst ProductCard = ({ product, addToCart }) => {\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const updateQuantity = (delta) => setQuantity((prev) => Math.max(1, prev + delta));\r\n\r\n    const handleProductDisplay = (e) => {\r\n        e.preventDefault();\r\n        navigate(\"/display\", { state: { product } });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n        \r\n         \r\n            addToCart(product, quantity);\r\n            setAlertMessage(`${quantity} ${product.name} added to cart.`);\r\n            // await new Promise((resolve) => setTimeout(resolve, 100));\r\n        } catch (error) {\r\n            console.error('Failed to add to cart:', error);\r\n            setAlertMessage('Failed to add product to cart.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (alertMessage) {\r\n            const timer = setTimeout(() => setFadeOut(true), 5000);\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [alertMessage]);\r\n \r\n\r\n   \r\n\r\n//  const imageUrl = product.img\r\n\r\n\r\n    return (\r\n        <div className=\" card\">\r\n            {loading && <Spinner />}\r\n            <img\r\n            loading=\"lazy\"\r\n                onClick={handleProductDisplay}\r\n                src={product.img}\r\n                className=\"card-img rounded-0\"\r\n                alt={product.name}\r\n                role=\"button\"\r\n                aria-label={`View details of ${product.name}`}\r\n    \r\n               \r\n            />\r\n            <div className=\"card-body\">\r\n                <p className=\"card-title\">{product.name}</p>\r\n                <p>£{product.price}</p>\r\n                <form className=\"product-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"quantity-controls\">\r\n                        <button type=\"button\" onClick={() => updateQuantity(-1)}>-</button>\r\n                        <span>{quantity}</span>\r\n                        <button type=\"button\" onClick={() => updateQuantity(1)}>+</button>\r\n                    </div>\r\n                    <button type=\"submit\" disabled={loading}>\r\n                        {loading ? \"Adding...\" : \"Add to Cart\"}\r\n                    </button>\r\n                </form>\r\n                {alertMessage && (\r\n                    <div className={`alert-popup ${fadeOut ? \"alert-popup-exit\" : \"\"}`}>\r\n                        {alertMessage}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ProductCard from \"./productcard\"; // Ensure the correct case is used\r\nimport Spinner from \"../spinner\"; // Ensure the correct case is used\r\nimport \"./product.css\";\r\n\r\nconst ProductSlider = ({ addToCart, searchQuery }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const itemsPerPage = 10;\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\r\n                if (!response.ok) throw new Error(\"Failed to fetch products\");\r\n                const data = await response.json();\r\n                setProducts(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n                alert(\"Could not fetch products. Please try again later.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const filteredProducts = products.filter((product) =>\r\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    const currentProducts = filteredProducts.slice(\r\n        currentIndex,\r\n        currentIndex + itemsPerPage\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <>\r\n                    <div className=\"product-container\">\r\n                        {currentProducts.length > 0 ? (\r\n                            currentProducts.map((product) => (\r\n                                <ProductCard\r\n                                    key={product.id}\r\n                                    product={product}\r\n                                    addToCart={addToCart}\r\n                                />\r\n                            ))\r\n                        ) : (\r\n                            <p>No products found</p>\r\n                        )}\r\n                    </div>\r\n                    {filteredProducts.length > itemsPerPage && (\r\n                        <div className=\"navigation-buttons\">\r\n                            <button\r\n                                onClick={() => setCurrentIndex((prev) => Math.max(0, prev - itemsPerPage))}\r\n                                disabled={currentIndex === 0} // Disable if at the first page\r\n                            >\r\n                                Previous\r\n                            </button>\r\n                            <button\r\n                                onClick={() =>\r\n                                    setCurrentIndex((prev) =>\r\n                                        Math.min(filteredProducts.length - itemsPerPage, prev + itemsPerPage)\r\n                                    )\r\n                                }\r\n                                disabled={currentIndex + itemsPerPage >= filteredProducts.length} // Disable if at the last page\r\n                            >\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductSlider;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./home.css\";\r\nimport Navbar from \"../../component/navbar/navbar\";\r\nimport Footer from \"../../component/footer/footer\";\r\nimport ProductSlider from \"../../component/product/product\";\r\nimport { FaWhatsapp } from \"react-icons/fa\";\r\nimport Spinner from \"../../component/spinner\";\r\n\r\nexport default function Home({ removeFromCart }) {\r\n    const [cart, setCart] = useState(() => {\r\n        const savedCart = sessionStorage.getItem(\"cart\");\r\n        return savedCart ? JSON.parse(savedCart) : [];\r\n    });\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [fadeOut, setFadeOut] = useState(false);\r\n    const [loadingProducts, setLoadingProducts] = useState(true);\r\n    const [loadingCart, setLoadingCart] = useState(true);\r\n\r\n\r\n    const getUserId = () => {\r\n        let userId = sessionStorage.getItem(\"user_id\");\r\n        if (!userId) {\r\n            userId = \"user_\" + Math.random().toString(36).substring(2, 15);\r\n            sessionStorage.setItem(\"user_id\", userId);\r\n        }\r\n        return userId;\r\n    };\r\n\r\n    const updateSessionStorageCart = (cart) => {\r\n        sessionStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    };\r\n\r\n    const fetchCart = useCallback(async () => {\r\n        const userId = getUserId(); // Retrieve the user ID\r\n        setLoadingCart(true); // Start loading\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/cart/${userId}`);\r\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n            const cartData = await response.json();\r\n            setCart(cartData); // Update cart state\r\n            updateSessionStorageCart(cartData); // Update session storage\r\n        } catch (error) {\r\n            console.error(\"Error fetching cart:\", error);\r\n            setCart([]); // Reset cart to an empty array on error\r\n        } finally {\r\n            setLoadingCart(false); // Stop loading\r\n        }\r\n    }, []);\r\n\r\n\r\n    const addToCart = async (product, quantity) => {\r\n        const userId = getUserId();\r\n        const parsedQuantity = parseInt(quantity);\r\n        setCart(prevCart => {\r\n            const existingProductIndex = prevCart.findIndex(item => item.id === product.id);\r\n            let updatedCart;\r\n\r\n            if (existingProductIndex > -1) {\r\n                updatedCart = prevCart.map((item, index) =>\r\n                    index === existingProductIndex\r\n                        ? { ...item, quantity: item.quantity + parsedQuantity }\r\n                        : item\r\n                );\r\n            } else {\r\n                updatedCart = [...prevCart, { ...product, quantity: parsedQuantity }];\r\n            }\r\n\r\n            return updatedCart; // Return new cart state\r\n        });\r\n\r\n        updateSessionStorageCart(cart); // Update session storage before server update\r\n\r\n        try {\r\n            const response = await fetch(`${process.env.REACT_APP_API_URL}/cart`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    product: {\r\n                        id: product.id,\r\n                        name: product.name,\r\n                        price: product.price,\r\n                        img: product.img,\r\n                    },\r\n                    quantity: parsedQuantity,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Failed to add item to cart\");\r\n            }\r\n\r\n            const updatedCartFromServer = await response.json();\r\n            if (JSON.stringify(cart) !== JSON.stringify(updatedCartFromServer)) {\r\n                setCart(updatedCartFromServer);\r\n                updateSessionStorageCart(updatedCartFromServer);\r\n            }\r\n\r\n            // Refetch the cart data after adding an item\r\n            await fetchCart();// Add this line to refetch the cart data after adding an item\r\n            setAlertMessage(`${product.name} has been added to the cart.`);\r\n        } catch (error) {\r\n            console.error(\"Error updating cart on server:\", error);\r\n            // Optionally revert or handle error\r\n        }\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            setLoadingProducts(false);\r\n            try {\r\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/products`);\r\n                if (!response.ok) throw new Error(\"Failed to fetch products\");\r\n                const data = await response.json();\r\n                setProducts(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n                alert(\"Could not fetch products. Please try again later.\");\r\n            } finally {\r\n                setLoadingProducts(false);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchCart(); // Call fetchCart function\r\n    }, [fetchCart]); // Add fetchCart to dependencies\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (alertMessage) {\r\n            const timer = setTimeout(() => {\r\n                setFadeOut(true);\r\n            }, 5000);\r\n\r\n            return () => clearTimeout(timer);\r\n        } else {\r\n            setFadeOut(false);\r\n        }\r\n    }, [alertMessage]);\r\n\r\n    useEffect(() => {\r\n        if (searchQuery) {\r\n            const filtered = products.filter(product =>\r\n                product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n            );\r\n            setFilteredProducts(filtered);\r\n        } else {\r\n            setFilteredProducts(products); // Show all products when search query is empty\r\n        }\r\n    }, [searchQuery, products]);\r\n\r\n    if (loadingCart) {\r\n        return <Spinner />;\r\n    }\r\n\r\n    return (\r\n        <main className=\"Home\">\r\n            <Navbar removeFromCart={removeFromCart} cart={cart} setCart={setCart} setSearchQuery={setSearchQuery} />\r\n            <section className=\"home-text-wrapper\">\r\n                <div className=\"row p-5 text-center\">\r\n                    <div className=\"home-text\">\r\n                        <img  loading=\"lazy\" alt=\"background logo\" src=\"/web-app-manifest-192x192.png\" />\r\n                        <h1>Welcome to MedMore Store</h1>\r\n                        <span>Where you can find the best food products</span>\r\n                    </div>\r\n                    <div className=\"home-btn d-flex flex-column flex-md-row justify-content-center mt-4\">\r\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">New Product</button>\r\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">All Products</button>\r\n                        <button className=\"col-12 col-md-4 my-1 mx-1\">Our Favorites</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section>\r\n                {loadingProducts ? (\r\n                    <Spinner />\r\n                ) : (\r\n                    <ProductSlider\r\n                        products={filteredProducts}\r\n                        addToCart={addToCart}\r\n                        searchQuery={searchQuery}\r\n                    />\r\n                )}\r\n            </section>\r\n\r\n            {alertMessage && (\r\n                <div className={`alert-popup ${fadeOut ? 'alert-popup-exit' : ''}`}>\r\n                    {alertMessage}\r\n                </div>\r\n            )}\r\n\r\n            <section className=\"footer mt-5\">\r\n                <Footer />\r\n            </section>\r\n\r\n            <div className=\"whatsapp-logo\">\r\n\r\n                <a href=\"https://wa.me/4407398653511\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"whatsapp-button\" aria-label=\"Chat with us on WhatsApp\">\r\n                    <FaWhatsapp size={40} color=\"#25D366\" />\r\n                </a>\r\n\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n"],"names":["Footer","_jsxs","children","_jsx","className","FaPhoneAlt","size","color","FaMapMarkerAlt","FaCcVisa","FaCcMastercard","FaCcAmex","FaCcDiscover","placeholder","CartItem","_ref","product","index","onIncrease","onDecrease","onRemove","console","log","name","productName","price","quantity","toFixed","onClick","Cart","removeFromCart","cartRef","cart","setCart","useState","JSON","parse","sessionStorage","getItem","alertMessage","setAlertMessage","fadeOut","setFadeOut","navigate","useNavigate","updateCart","newCart","setItem","stringify","handleRemoveFromCart","filter","item","productId","useEffect","timer","setTimeout","clearTimeout","FaTimes","handleCartClose","current","classList","remove","length","map","i","reduce","total","handleCheckout","state","Navbar","setSearchQuery","menuRef","useRef","searchRef","loginRef","email","setEmail","password","setPassword","loading","setLoading","toggleVisibility","ref","_ref$current","toggle","closeVisibility","_ref$current2","Link","to","FaSearch","FaUser","FaBars","FaShoppingCart","onSubmit","e","preventDefault","type","onChange","target","value","async","_data$user","response","fetch","method","credentials","headers","body","ok","errorData","json","alert","error","data","user","isadmin","required","Spinner","addToCart","setQuantity","updateQuantity","delta","prev","Math","max","src","img","alt","role","disabled","searchQuery","products","setProducts","currentIndex","setCurrentIndex","itemsPerPage","Error","fetchProducts","filteredProducts","toLowerCase","includes","currentProducts","slice","_Fragment","ProductCard","id","min","Home","savedCart","setFilteredProducts","loadingProducts","setLoadingProducts","loadingCart","setLoadingCart","getUserId","userId","random","toString","substring","updateSessionStorageCart","fetchCart","useCallback","status","cartData","filtered","ProductSlider","parsedQuantity","parseInt","prevCart","existingProductIndex","findIndex","updatedCart","updatedCartFromServer","href","rel","class","FaWhatsapp"],"sourceRoot":""}